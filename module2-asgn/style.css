/* This is the external style sheet, the majority of the page's visual aspects 
are specified here. I don't believe there are any declarations that need to be made. 

Note (to self?): saving your file as a .css FIRST and then opening it in your editor should
give you auto-fill/completion that will make coding a lot faster. :D */ 



/* I will need to check the above statement, * is applies to all 
of an HTML script. Border box makes sizing your padding, margins...boxes a lot easier. */
*{
	box-sizing: border-box;
}

h1 {
	text-align: center;
	margin: 50px;
	/* remember margin gives space outside, while padding gives space 
	inside border */
}

/* Heading 1 entries should have a margin at the bottom, note:  they 
collapse with the margin-top (I believe); */ 

p{
	border: 1px	solid black ;
	background-color: #D3D3D3;
	width:  90%;
	height: 150px;
	margin-left: auto;
	margin-right: auto;
	font-family: Garamond;	
	color: black;
}

/* A bunch of specifications for properties of paragraphs, property name
and functions are self-explanatory. */

/* Simple Responsive Framework (below) 
Here I am trying to get the size of the browser window to scale
and adjust to the the size of the browser/device width. 
*/

.row{
	width: 100%;
}

/* .row specified at width 100% will make that element take up 100% 
of the space of the its container. */

/* NOTE THE DOUBLE BRACKET WHEN SPECIFYING FLOAT PROPERTY. CLOSED AFTER
SPECIFYING COLUMN WIDTHS */

@media (min-width: 992px) {
	.col-lg-1,.col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, 
	.col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, 
	.col-lg-11, .col-lg-12, {
	float: left;
	border: 1px solid black;
}
.col-lg-1 {
	width: 8.33%;
}
.col-lg-2 {
	width: 16.66%;
}
.col-lg-3 {
	width: 25%;
}
.col-lg-4 {
	width: 33%;
}
.col-lg-5 {
	width: 41.66%;
}
.col-lg-6 {
	width: 50%;
}
.col-lg-7 {
	width: 58.33%;
}
.col-lg-8 {
	width: 66.66%;
}
.col-lg-9 {
	width: 74.99%;
}
.col-lg-10 {
	width: 83.33%;
}
.col-lg-11 {
	width: 91.66%;
}
.col-lg-12 {
	width: 100%;
}}

/* @media, when your device has a width of at least 992 px, the
page will be split into 12 horizontally stacking columns of equal size with a 1px border.
*/

@media (min-width: 768px) and (max-width: 991px)  {
	.col-md-1,.col-md-2, .col-md-3, .col-md-4, .col-md-5, 
	.col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, 
	.col-md-11, .col-md-12, {
	float: left;
	border: 1px solid black;
}
.col-md-1{
	width: 8.33%;
}
.col-md-2{
	width: 16.66%;
}
.col-md-3{
	width: 25%;
}
.col-md-4{
	width: 33%;
}
.col-md-5{
	width: 41.66%;
}
.col-md-6{
	width: 50%;
}
.col-md-7{
	width: 58.33%;
}
.col-md-8{
	width: 66.66%;
}
.col-md-9{
	width: 74.99%;
}
.col-md-10{
	width: 83.33%;
}
.col-md-11{
	width: 91.66%;
}
.col-md-12{
	width: 100%;
}}

/* @media, similar thing, when your device has a width of between 768px and 991 px, the
page will be split into 12 horizontally stacking columns (again same size) with a 1px border.
We have named the 12 columns differently because we will be specifying how they display
and their behaviour a bit later. They will behave differently depending on the device size, which we
determine by # of pixels. */

@media (max-width: 767px)  {
	.col-sm-1,.col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, 
	.col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, 
	.col-sm-11, .col-sm-12, {
	float: left;
	border: 1px solid black;
}
.col-sm-1{
	width: 8.33%;
}
.col-sm-2{
	width: 16.66%;
}
.col-sm-3{
	width: 25%;
}
.col-sm-4{
	width: 33%;
}
.col-sm-5{
	width: 41.66%;
}
.col-sm-6{
	width: 50%;
}
.col-sm-7{
	width: 58.33%;
}
.col-sm-8{
	width: 66.66%;
}
.col-sm-9{
	width: 74.99%;
}
.col-sm-10{
	width: 83.33%;
}
.col-sm-11{
	width: 91.66%;
}
.col-sm-12{
	width: 100%;
}}

